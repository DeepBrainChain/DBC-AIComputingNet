#!/bin/bash


if [ $# -lt 1 ]; then
    echo "ipfs-ctl [start] [stop] [status]"
    [[ "$0" = "$BASH_SOURCE" ]] && exit 1 || return 1
fi


workspace=`pwd`
USERID=`id -u`
PROC_NAME="ipfs"
ps_="ps -e -o uid -o pid -o command"

stop()
{
    pid=$($ps_  | grep [d]aemon |  awk '{if (($1 == "'${USERID}'") && ($3~/'${PROC_NAME}'$/)) print $2}')

    if [[ -n "$pid" ]]; then
        echo "stop ipfs daemon"
        ipfs shutdown > /dev/null 2>&1
        kill -TERM $pid > /dev/null 2>&1
    fi
    echo "ipfs daemon was stopped"
}

status()
{
    pid=$($ps_  | grep [d]aemon | awk '{if (($1 == "'${USERID}'") && ($3~/'${PROC_NAME}'$/)) print $2}')
    if [[ -n "$pid" ]]; then

        echo "alive"

        if [ "$1" = "-v" ]; then
            echo
            echo "-- ipfs peers -- "
            ipfs swarm peers

            echo
            echo "-- ipfs storage -- "
            ipfs repo stat
            echo
        fi

        return 0
    else
        echo "down"
        return 1
    fi
}

arg=$1

case "$arg" in

"start")
    status > /dev/null
    if [ $? -eq 0 ]; then
        echo "ipfs daemon is running"
        exit 0
    else
        echo "ipfs daemon is starting"
        nohup ipfs daemon --enable-gc >/dev/null 2>&1 &
        sleep 5
        echo "ipfs daemon is started"
    fi
;;

"stop")
   stop
;;

"status")
    status $2
;;

*)
echo "ipfs-ctl [start|stop|status]"
;;
esac